openapi: 3.0.0
info:
  title: User Management API
  description: API for managing users, authentication, and related resources.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
paths:
  /users/login:
    post:
      summary: User login
      description: Authenticate user with username and password.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "evidea_10001"
                password:
                  type: string
                  # example: "$2a$12$Tm9yt24jnJsL.XjF1CrRzOcmqLDLj6ob7Py.FW/imHcQ7H/iJG9hC"
                  example: "test"
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  token:
                    type: string
                    example: "dummy-access-token"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid username or password"

  /users:
    get:
      summary: Get all users
      description: Retrieve a list of users.
      tags:
        - Users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    username:
                      type: string
                      example: "user1"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /users/organizations:
      get:
        summary: Get organizations the user belongs to
        description: Returns a list of organizations the authenticated user is part of.
        parameters:
          - in: query
            name: token
            required: true
            schema:
              type: string
            description: JWT token to authenticate the user
        responses:
          '200':
            description: A list of organizations
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      org_id:
                        type: string
                      org_name:
                        type: string
                      admin_flg:
                        type: boolean
                      now_open:
                        type: boolean
          '400':
            description: Missing token parameter
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          '401':
            description: Invalid token or unauthorized access
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          '500':
            description: Internal server error during query execution
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string